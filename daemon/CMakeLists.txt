cmake_minimum_required (VERSION 2.8.12)

INCLUDE(CheckIncludeFiles)
INCLUDE(CheckLibraryExists)
INCLUDE(CheckFunctionExists)
INCLUDE(CheckCXXCompilerFlag)
INCLUDE(${CMAKE_ROOT}/Modules/FindPkgConfig.cmake)

project (driftvmd)
SET(EXECUTABLE_OUTPUT_PATH ${PROJECT_BINARY_DIR}/Output)

SET(LIBS pthread z)

pkg_search_module(EVENT REQUIRED libevent2 event2 libevent event)
include_directories(${EVENT_INCLUDE_DIRS})
link_directories(${EVENT_LIBRARY_DIRS})
SET(LIBS ${LIBS} ${EVENT_LIBRARIES})

pkg_search_module(MYSQL REQUIRED mysqlclient_r mysqlclient)
include_directories(${MYSQL_INCLUDE_DIRS})
link_directories(${MYSQL_LIBRARY_DIRS})
SET(LIBS ${LIBS} ${MYSQL_LIBRARIES})

include_directories(/usr/local/include ./univalue/include)
link_directories(/usr/local/lib)
SET(DSL_DIRECTORY ${PROJECT_SOURCE_DIR}/Common/DSL/dslsrc)
include_directories(${DSL_DIRECTORY})

add_definitions(-fPIC -pthread -DENABLE_MYSQL -DENABLE_EVENT)
add_definitions(-Wall -D_REENTRANT -D_THREAD_SAFE -D_POSIX_C_SOURCE=200112 -D_FORTIFY_SOURCE=2 -D_FILE_OFFSET_BITS=64)

IF(CMAKE_SYSTEM_PROCESSOR STREQUAL x86_64 OR CMAKE_SYSTEM_PROCESSOR STREQUAL amd64)
message(STATUS "Enabling 64-bit support...")
link_directories(/usr/lib/x86_64-linux-gnu)
ELSE(CMAKE_SYSTEM_PROCESSOR STREQUAL x86_64 OR CMAKE_SYSTEM_PROCESSOR STREQUAL amd64)
# 32-bit only includes
link_directories(/usr/lib/i386-linux-gnu)
ENDIF(CMAKE_SYSTEM_PROCESSOR STREQUAL x86_64 OR CMAKE_SYSTEM_PROCESSOR STREQUAL amd64)

function (OptTest option)
	check_cxx_compiler_flag(${option} OPTCHK)
	IF(OPTCHK)
		message(STATUS "GCC has ${option}")
		add_definitions(${option})
	ELSE(OPTCHK)
		message(STATUS "GCC does not have ${option}")
	ENDIF(OPTCHK)
	UNSET(OPTCHK CACHE)
endfunction(OptTest)
function (OptTest2 option def)
	check_cxx_compiler_flag(${option} OPTCHK)
	IF(OPTCHK)
		message(STATUS "GCC has ${option}")
		add_definitions(${option} ${def})
	ELSE(OPTCHK)
		message(STATUS "GCC does not have ${option}")
	ENDIF(OPTCHK)
	UNSET(OPTCHK CACHE)
endfunction(OptTest2)
OptTest2(-fvisibility=hidden -DHAVE_VIS)
OptTest(-fstack-protector-all)
OptTest(-Wstack-protector)
OptTest(-Wno-pragmas)
OptTest(-Wno-write-strings)
OptTest(-Wno-format-contains-nul)
OptTest(-Wno-c++11-narrowing)
OptTest(-Werror=format-security)
OptTest(-Werror=format-extra-args)

IF(CMAKE_BUILD_TYPE STREQUAL "Debug")
#enable debugging
message(STATUS "Debug build")
set(DEBUG 1)
add_definitions(-DDEBUG -D_DEBUG -D_GLIBCXX_DEBUG)
add_definitions(-g -ggdb)
ELSE()
#optimizations
add_definitions(-O3)
SET(CMAKE_SHARED_LINKER_FLAGS "${CMAKE_SHARED_LINKER_FLAGS} -s")
SET(CMAKE_MODULE_LINKER_FLAGS "${CMAKE_MODULE_LINKER_FLAGS} -s")
SET(CMAKE_EXE_LINKER_FLAGS "${CMAKE_MODULE_LINKER_FLAGS} -s")
ENDIF()

add_subdirectory (DSL)
SET(LIBS dsl ${LIBS})

add_subdirectory (univalue)
SET(LIBS libunivalue ${LIBS})

add_subdirectory (driftvmd)
